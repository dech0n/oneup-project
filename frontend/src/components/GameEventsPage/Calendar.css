/* TODO: style left-right arrows to be orangred */

.react-calendar {
    width: auto;
    /* max-width: 100%; */
    max-width: 550px;
    background-color: rgb(25, 25, 25);
    border: 1px solid #a0a096;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.125em;
  }
  .react-calendar--doubleView {
    width: 700px;
  }
  .react-calendar--doubleView .react-calendar__viewContainer {
    display: flex;
    margin: -0.5em;
  }
  .react-calendar--doubleView .react-calendar__viewContainer > * {
    width: 50%;
    margin: 0.5em;
  }
  .react-calendar,
  .react-calendar *,
  .react-calendar *:before,
  .react-calendar *:after {
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
  }
  .react-calendar button {
    margin: 0;
    border: 0;
    outline: none;
  }
  .react-calendar button:enabled:hover {
    cursor: pointer;
  }
  .react-calendar__navigation {
    height: 44px;
    margin-bottom: 1em;
  }
  .react-calendar__navigation button {
    min-width: 44px;
    background: none;
  }
  .react-calendar__navigation button:enabled:hover,
  .react-calendar__navigation button:enabled:focus {
    /* background-color: #e6e6e6; */
  }
  .react-calendar__navigation button[disabled] {
    background-color: #f0f0f0;
  }
  .react-calendar__month-view__weekdays {
    text-align: center;
    text-transform: uppercase;
    font-weight: bold;
    font-size: 0.75em;
  }
  .react-calendar__month-view__weekdays__weekday {
    padding: 0.5em;
  }
  .react-calendar__month-view__weekNumbers {
    font-weight: bold;
  }
  .react-calendar__month-view__weekNumbers .react-calendar__tile {
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.75em;
    padding: calc(0.75em / 0.75) calc(0.5em / 0.75);
  }
  .react-calendar .react-calendar__month-view__days__day--weekend {
    color: orangered;
  }
  .react-calendar .react-calendar__month-view__days__day--neighboringMonth {
    color: rgb(152, 143, 129);
  }
  .react-calendar__year-view .react-calendar__tile,
  .react-calendar__decade-view .react-calendar__tile,
  .react-calendar__century-view .react-calendar__tile {
    padding: 2em 0.5em;
  }
  .react-calendar__tile {
    max-width: 100%;
    text-align: center;
    padding: 0.75em 0.5em;
    background: none;
    color: lightgrey;
  }
  .react-calendar__tile:disabled {
    background-color: #f0f0f0;
  }
  .react-calendar__tile:enabled:hover,
  .react-calendar__tile:enabled:focus {
    background-color: #e6e6e6;
  }
  .react-calendar__tile--now {
    background: #ffff76;
  }
  .react-calendar__tile--now:enabled:hover,
  .react-calendar__tile--now:enabled:focus {
    background: #ffffa9;
  }
  .react-calendar__tile--hasActive {
    background: #76baff;
  }
  .react-calendar__tile--hasActive:enabled:hover,
  .react-calendar__tile--hasActive:enabled:focus {
    background: #a9d4ff;
  }
  .react-calendar__tile--active {
    background: #006edc;
    color: white;
  }
  .react-calendar__tile--active:enabled:hover,
  .react-calendar__tile--active:enabled:focus {
    background: #1087ff;
  }
  .react-calendar--selectRange .react-calendar__tile--hover {
    background-color: #e6e6e6;
  }

  #calendar-container > div > div.react-calendar__navigation > button.react-calendar__navigation__label > span {
    /* color: rgb(152, 143, 129); */
    color: orangered;
    font-weight: bold;
    font-size: 35px;
  }

  #calendar-container > div > div.react-calendar__navigation > button.react-calendar__navigation__label {
    padding-top: 20px
  }

  #calendar-container {
    justify-content: center;
  }
  /* //     // 2021-06-22T08:25:48.893Z <-- event.date format
    //     const getEventDates = async () => {
    //         const dates = await events.map(event => event.date.slice(0, 10).split('-'))
    //         await setDates(dates)
    //     }
    //     // getEventDates()

    //     return () => { }
    //     // data leak when I add events to dependency array
    // }, [id])

    // // OR just have the DB store dates as milliseconds ?
    // const getDate = (date, type) => {
    //     switch (type.toLowerCase()) {
    //         case 'day':
    //             const day = date[2].slice(0)
    //             return +day
    //         case 'month':
    //             const month = date[1].slice(0)
    //             return +month
    //         case 'year':
    //             const year = date[0].slice(0)
    //             return +year
    //         default:
    //             return date;
    //     }
    // }

    // const addToCalendar = async ({ date, view }) => {
    //     return await view === 'month' && date.getDate() === getDate(dates[0], 'day') ? <p>Event Today!</p> : null
    //     // console.log('DATE', date)
    //     // console.log('VIEW', view)
    // } */
